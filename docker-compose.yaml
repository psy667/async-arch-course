version: '3.8'
services:
  task-tracker:
    build:
      context: .
      dockerfile: ./apps/task-tracker/Dockerfile
      target: development
    command: npm run start:debug task-tracker
    ports:
      - '3200:3200'
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/task-tracker/.env
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:debug auth
    ports:
      - '3201:3201'
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/auth/.env
  accounting:
    build:
      context: .
      dockerfile: ./apps/accounting/Dockerfile
      target: development
    command: npm run start:debug accounting
    ports:
      - '3202:3202'
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/accounting/.env
  auth-db:
    image: postgres:13.1-alpine
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: auth
    volumes:
      - dbdata-auth:/var/lib/postgresql/data
  task-tracker-db:
    image: postgres:13.1-alpine
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: task-tracker
    volumes:
      - dbdata-task-tracker:/var/lib/postgresql/data
  accounting-db:
    image: postgres:13.1-alpine
    ports:
      - '5434:5432'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: accounting
    volumes:
      - dbdata-accounting:/var/lib/postgresql/data

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


volumes:
  dbdata-auth:
  dbdata-task-tracker:
  dbdata-accounting:

